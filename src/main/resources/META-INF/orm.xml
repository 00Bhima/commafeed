<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="2.0"
	xmlns="http://java.sun.com/xml/ns/persistence/orm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://java.sun.com/xml/ns/persistence/orm
        http://java.sun.com/xml/ns/persistence/orm_2_0.xsd">

	<named-query name="Entry.byGuids">
		<query>select e from FeedEntry e where e.guid in :guids order by e.updated desc</query>
	</named-query>
	<named-query name="Entry.unreadByFeed">
		<query>select e from FeedEntry e where e.feed=:feed and not exists (select s from FeedEntryStatus s where s.entry = e and s.user =:user and s.read=true) order by e.updated desc</query>
	</named-query>
	<named-query name="Entry.readByFeed">
		<query>select e from FeedEntry e where e.feed=:feed and exists (select s from FeedEntryStatus s where s.entry = e and s.user =:user and s.read=true) order by e.updated desc</query>
	</named-query>
	
	<named-query name="Entry.unreadByCategories">
		<query>select e from FeedEntry e where exists (select s from FeedSubscription s where s.user=:user and s.feed = e.feed and s.category in :categories) and not exists (select s from FeedEntryStatus s where s.entry = e and s.user =:user and s.read=true) order by e.updated desc</query>
	</named-query>
	<named-query name="Entry.readByCategories">
		<query>select e from FeedEntry e where exists (select s from FeedSubscription s where s.user=:user and s.feed = e.feed and s.category in :categories) and exists (select s from FeedEntryStatus s where s.entry = e and s.user =:user and s.read=true) order by e.updated desc</query>
	</named-query>
</entity-mappings>